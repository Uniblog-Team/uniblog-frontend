name: Frontend CI

# Disparadores: Se ejecuta en push a ramas feature/* y en Pull Requests hacia develop
on:
  push:
    branches: [ "feature/**" ] # Para cambios en ramas de funcionalidad
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "develop", "main" ] # Cuando se abre/actualiza un PR hacia develop

jobs:
  build-lint-scan:
    name: BBuild, Lint & Scan Frontend
    runs-on: ubuntu-latest # Usar la última versión estable de Ubuntu como runner

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Acción estándar para descargar tu código
      with:
        # Necesario para que SonarCloud pueda analizar correctamente los PRs
        # Obtiene todo el historial para que Sonar pueda diferenciar entre código nuevo y antiguo.
        fetch-depth: 0

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4 # Acción para configurar Node.js
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Netlify
      run: npm install -g netlify-cli

    - name: Install dependencies
      run: npm ci

    - name: Run Linter (ESLint)
      run: npm run lint
      # Si el comando falla, el workflow fallará

    - name: Build Project
      run: npm run build
      # Esto verifica que el proyecto compile sin errores


    - name: Run Tests
      run: npm test -- --coverage 


    # --- PASO DE SCANNER DE SONARCLOUD ---
    # Se ejecutará SÓLO en Pull Requests hacia develop o main.
    - name: SonarCloud Scan
      if: github.event_name == 'pull_request'
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Deploy to Netlify (Preview or Prod)
      run: |
        BRANCH_NAME=${{ github.head_ref || github.ref_name }}
        
        if [ "$BRANCH_NAME" = "main" ]; then
          echo "Deploying to production..."
          netlify deploy --dir=dist --prod \
            --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID
        else
          echo "Deploying preview from branch: $BRANCH_NAME"
          netlify deploy --dir=dist \
            --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID
        fi
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: Set Netlify Preview URL
      id: url_preview
      run: echo "NETLIFY_PREVIEW_URL=https://${GITHUB_HEAD_REF}--your-site.netlify.app" >> $GITHUB_OUTPUT

    - name: Comment Preview URL on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && github.head_ref != 'main'
      with:
        script: |
          const issueNumber = context.payload.pull_request.number
          const previewUrl = "${{ steps.url_preview.outputs.NETLIFY_PREVIEW_URL }}"

          if (issueNumber && previewUrl) {
            await github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview Ready!**\n\n🔗 [View Deployment](${previewUrl})`
            })
          } else {
            console.log('No PR or URL found.')
          }