name: Frontend CI

on:
  push:
    branches: [ "feature/**" ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "develop", "main" ]

jobs:
  build-lint-test:
    name: Build, Lint & Test Frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Linter (ESLint)
        run: npm run lint

      - name: Build Project
        run: npm run build

      - name: Run Tests & Generate Coverage
        run: npm test -- --coverage

      # Sube el reporte de cobertura para que el workflow de SonarCloud lo use
      - name: Upload coverage report
        if: success() # Solo si los pasos anteriores fueron exitosos
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/lcov.info
          retention-days: 1 # Guardar por 1 día

      # --- PASO DE SCANNER DE SONARCLOUD (SOLO PARA PRs INTERNOS O PUSHES A FEATURE) ---
      # Solo se ejecutará para PRs que NO vienen de forks.
      - name: SonarCloud Scan (Non-Fork PRs / Feature branches)
        if: |
          (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) ||
          (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/'))
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}