name: Frontend CI

# Disparadores: Se ejecuta en push a ramas feature/* y en Pull Requests hacia develop
on:
  push:
    branches: [ "feature/**" ] # Para cambios en ramas de funcionalidad
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "develop", "main" ] # Cuando se abre/actualiza un PR hacia develop

jobs:
  build-lint-scan:
    name: BBuild, Lint & Scan Frontend
    runs-on: ubuntu-latest # Usar la última versión estable de Ubuntu como runner

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Acción estándar para descargar tu código
      with:
        # Necesario para que SonarCloud pueda analizar correctamente los PRs
        # Obtiene todo el historial para que Sonar pueda diferenciar entre código nuevo y antiguo.
        fetch-depth: 0

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4 # Acción para configurar Node.js
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm' # Habilitar caché para dependencias de npm (acelera ejecuciones futuras)
        # Si usas yarn, cambia 'npm' por 'yarn' arriba y los comandos de abajo

    - name: Install dependencies
      run: npm ci # 'npm ci' es mejor para CI, instala versiones exactas del package-lock.json
      # Si usas yarn: run: yarn install --frozen-lockfile

    - name: Run Linter (ESLint)
      run: npm run lint # ASUNCIÓN: Tienes un script 'lint' en tu package.json (ej: "lint": "eslint .")
      # Si el comando falla, el workflow fallará

    - name: Build Project
      run: npm run build # ASUNCIÓN: Tienes un script 'build' en tu package.json
      # Esto verifica que el proyecto compile sin errores


    - name: Run Tests
      run: npm test -- --coverage 


    # --- PASO DE SCANNER DE SONARCLOUD ---
    # Se ejecutará SÓLO en Pull Requests hacia develop o main.
    - name: SonarCloud Scan
      if: github.event_name == 'pull_request'
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}